import Head from "next/head";
import { useRef, useEffect, useState } from "react";
import styled from "styled-components";
import Image from "next/image";
import { useRouter } from "next/router";
import * as THREE from "three";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";
import { DRACOLoader } from "three/examples/jsm/loaders/DRACOLoader.js";
import { OrbitControls } from "three/examples/jsm/controls/OrbitControls.js";
import Bear from "../../public/bear.png";

const Container = styled.div`
  cursor: grab;
`;
const Modal = styled.div`
  position: fixed;
  bottom: 72%;
  left: 50%;
  transform: translateX(-50%);
  width: 200px;
  height: 100px;
`;
const Content = styled.div`
  display: flex;
  justify-content: space-around;
  align-items: center;
  margin-bottom: 10px;
  font-weight: bold;
`;
const Text = styled.div``;
const Title = styled.h4``;
const Description = styled.p``;
const Button = styled.button`
  display: block;
  width: 100%;
  cursor: pointer;
`;
export default function Home() {
  const containerRef = useRef<HTMLDivElement>(null);
  const [show, setShow] = useState(false);
  const router = useRouter();

  useEffect(() => {
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(
      24, // 相機的垂直視野
      1440 / window.innerHeight, // 相機的外觀比例
      5, // 接近的相機視體平面距離值
      1000 //遠的相機視體平面距離值
    );
    camera.position.x = 0;
    camera.position.y = 20;
    camera.position.z = 50;

    const renderer = new THREE.WebGLRenderer();
    renderer.setSize(1440, window.innerHeight);

    const dracoLoader = new DRACOLoader();
    dracoLoader.setDecoderPath("draco/");
    dracoLoader.setDecoderConfig({ type: "js" });

    containerRef.current?.appendChild(renderer.domElement);

    const controls = new OrbitControls(camera, renderer.domElement);
    controls.maxPolarAngle = 1.26;
    controls.minPolarAngle = 1;

    const light = new THREE.AmbientLight(0x404040, 3);
    scene.add(light);

    const loader = new GLTFLoader();
    loader.setDRACOLoader(dracoLoader);
    loader.load("island.glb", (gltf) => {
      const island = gltf.scene;
      scene.add(island);
      controls.target.set(
        island.position.x,
        island.position.y,
        island.position.z
      );
      const loader2 = new GLTFLoader();
      loader2.setDRACOLoader(dracoLoader);
      loader2.load("cyclist.glb", (gltf2) => {
        const cyclist = gltf2.scene;
        scene.add(camera);
        camera.add(cyclist);
        cyclist.position.set(-10.5, 0, -50);
        cyclist.rotation.set(0, -0.5, 0);
        renderer.render(scene, camera);
      });
    });

    function animate() {
      requestAnimationFrame(animate);
      controls.update();
      renderer.render(scene, camera);
    }
    animate();
    const handleRotate = () => {
      const azimuthalAngle = controls.getAzimuthalAngle();
      console.log(azimuthalAngle);
      if (azimuthalAngle > 0.24) {
        setShow(true);
      }
      if (azimuthalAngle > 0.8 || azimuthalAngle < 0.24) {
        setShow(false);
      }
    };
    controls.addEventListener("change", handleRotate);
    return () => {
      controls.removeEventListener("change", handleRotate);
    };
  }, []);

  return (
    <>
      <Head>
        <title>Riv Studio</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Container ref={containerRef} />
        {show && (
          <Modal>
            <Content>
              <Image src={Bear} alt="bear" width={50} />
              <Text>
                <Title>阿峰的房子</Title>
                <Description>I like bear!</Description>
              </Text>
            </Content>
            <Button
              onClick={() => {
                router.push(
                  "https://drive.google.com/file/d/1-cNlXR3XAuJwJhoTe_nKTtwQmV0xtyrG/view?usp=share_link"
                );
              }}
            >
              Click!
            </Button>
          </Modal>
        )}
      </main>
    </>
  );
}
